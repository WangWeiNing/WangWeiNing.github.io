---
layout: post
title: "UNIX文件操作-lseek函数"
subtitle: "unix文件操作系列"
date: 2017-08-13 15:23:00
author: "Wang"
header-img: "img/post-bg-2015.jpg"
tags:
  -UNIX
---



# Unix文件I/O

## 1.文件描述符  

>文件描述符是一个非负整数，当打开或创建一个文件时，内核会向进程返回一个文件描述符，用来引用文件。  
>按照Unix的惯例，文件描述符0关联到进程标准输入，1关联到标准输出，2关联到标准错误，这是Shell以及众多应用程序的惯例，与内核无关。  

## 2.lseek函数
  
  * 每个文件都有一个与其相关联的“当前文件偏移量(current file offset)  
  * 它通常是一个非负整数，用以度量从文件开始处计算的字节数。  
  * 通常，读与写操作都从当前文件偏移处开始，并增加读写的字节数到偏移量。  
  * 当打开一个文件时，除非指定O_APPEND选项，否则该偏移量被设置为0
  * lseek为一个系统调用，并不产生任何IO操作，并且偏移量是记录在内核中的一个值。



      
          #include <unistd.h>  
	  off_t lseek(int fd, off_t offset, int whence);  
	  如果设置成功，返回新的文件偏移量，若出错，返回-1.  
	  whence是决定offset相对于文件那个位置.  
	  SEEK_SET相对于文件开始处  
	  SEEK_CUR相对于文件当前位置  
	  SEEK_END相对于文件末尾  
	  offset可以为负  

				          
* 文件偏移量可以设置大于当前文件长度，但在这种情况下写入会造成"文件空洞"，文件中没有写过的字节都被读为0，文件空洞是否占用存储与文件系统的实现有关，常用的ext4会占用存储空间
